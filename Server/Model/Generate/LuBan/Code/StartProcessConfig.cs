//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using System.Text.Json;



namespace cfg
{

public sealed partial class StartProcessConfig :  Bright.Config.BeanBase 
{
    public StartProcessConfig(JsonElement _json) 
    {
        Id = _json.GetProperty("Id").GetInt32();
        InnerPort = _json.GetProperty("InnerPort").GetInt32();
        AppName = _json.GetProperty("AppName").GetString();
        StartMachineConfig = _json.GetProperty("StartMachineConfig").GetInt32();
        PostInit();
    }

    public StartProcessConfig(int Id, int InnerPort, string AppName, int StartMachineConfig ) 
    {
        this.Id = Id;
        this.InnerPort = InnerPort;
        this.AppName = AppName;
        this.StartMachineConfig = StartMachineConfig;
        PostInit();
    }

    public static StartProcessConfig DeserializeStartProcessConfig(JsonElement _json)
    {
        return new StartProcessConfig(_json);
    }

    public int Id { get; private set; }
    /// <summary>
    /// 内网端口
    /// </summary>
    public int InnerPort { get; private set; }
    /// <summary>
    /// 程序名
    /// </summary>
    public string AppName { get; private set; }
    /// <summary>
    /// 关联的启动机器表
    /// </summary>
    public int StartMachineConfig { get; private set; }
    public StartMachineConfig StartMachineConfig_Ref { get; private set; }

    public const int __ID__ = 2140444015;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        this.StartMachineConfig_Ref = (_tables["StartMachineTable"] as StartMachineTable).GetOrDefault(StartMachineConfig);
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "InnerPort:" + InnerPort + ","
        + "AppName:" + AppName + ","
        + "StartMachineConfig:" + StartMachineConfig + ","
        + "}";
    }

    partial void PostInit();
    partial void PostResolve();
}
}
