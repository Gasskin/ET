//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using System.Text.Json;



namespace cfg
{

public sealed partial class StartSceneConfig :  Bright.Config.BeanBase 
{
    public StartSceneConfig(JsonElement _json) 
    {
        Id = _json.GetProperty("Id").GetInt32();
        StartProcessConfig = _json.GetProperty("StartProcessConfig").GetInt32();
        StartZoneConfig = _json.GetProperty("StartZoneConfig").GetInt32();
        SceneType = (Enum.SceneType)_json.GetProperty("SceneType").GetInt32();
        Name = _json.GetProperty("Name").GetString();
        OuterPort = _json.GetProperty("OuterPort").GetInt32();
        PostInit();
    }

    public StartSceneConfig(int Id, int StartProcessConfig, int StartZoneConfig, Enum.SceneType SceneType, string Name, int OuterPort ) 
    {
        this.Id = Id;
        this.StartProcessConfig = StartProcessConfig;
        this.StartZoneConfig = StartZoneConfig;
        this.SceneType = SceneType;
        this.Name = Name;
        this.OuterPort = OuterPort;
        PostInit();
    }

    public static StartSceneConfig DeserializeStartSceneConfig(JsonElement _json)
    {
        return new StartSceneConfig(_json);
    }

    public int Id { get; private set; }
    /// <summary>
    /// 所属进程
    /// </summary>
    public int StartProcessConfig { get; private set; }
    public StartProcessConfig StartProcessConfig_Ref { get; private set; }
    /// <summary>
    /// 所属区
    /// </summary>
    public int StartZoneConfig { get; private set; }
    public StartZoneConfig StartZoneConfig_Ref { get; private set; }
    /// <summary>
    /// 类型
    /// </summary>
    public Enum.SceneType SceneType { get; private set; }
    /// <summary>
    /// 名字
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 外网端口
    /// </summary>
    public int OuterPort { get; private set; }

    public const int __ID__ = 1499456844;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        this.StartProcessConfig_Ref = (_tables["StartProcessTable"] as StartProcessTable).GetOrDefault(StartProcessConfig);
        this.StartZoneConfig_Ref = (_tables["StartZoneTable"] as StartZoneTable).GetOrDefault(StartZoneConfig);
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "StartProcessConfig:" + StartProcessConfig + ","
        + "StartZoneConfig:" + StartZoneConfig + ","
        + "SceneType:" + SceneType + ","
        + "Name:" + Name + ","
        + "OuterPort:" + OuterPort + ","
        + "}";
    }

    partial void PostInit();
    partial void PostResolve();
}
}
