//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using System.Text.Json;



namespace cfg
{

public sealed partial class AIConfig :  Bright.Config.BeanBase 
{
    public AIConfig(JsonElement _json) 
    {
        Id = _json.GetProperty("Id").GetInt32();
        AIConfigId = _json.GetProperty("AIConfigId").GetInt32();
        Order = _json.GetProperty("Order").GetInt32();
        Name = _json.GetProperty("Name").GetString();
        Desc = _json.GetProperty("Desc").GetString();
        { var __json0 = _json.GetProperty("NodeParams"); NodeParams = new System.Collections.Generic.List<int>(__json0.GetArrayLength()); foreach(JsonElement __e0 in __json0.EnumerateArray()) { int __v0;  __v0 = __e0.GetInt32();  NodeParams.Add(__v0); }   }
        PostInit();
    }

    public AIConfig(int Id, int AIConfigId, int Order, string Name, string Desc, System.Collections.Generic.List<int> NodeParams ) 
    {
        this.Id = Id;
        this.AIConfigId = AIConfigId;
        this.Order = Order;
        this.Name = Name;
        this.Desc = Desc;
        this.NodeParams = NodeParams;
        PostInit();
    }

    public static AIConfig DeserializeAIConfig(JsonElement _json)
    {
        return new AIConfig(_json);
    }

    public int Id { get; private set; }
    /// <summary>
    /// 所属AI
    /// </summary>
    public int AIConfigId { get; private set; }
    /// <summary>
    /// 此AI中的顺序
    /// </summary>
    public int Order { get; private set; }
    /// <summary>
    /// 节点名称
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 描述
    /// </summary>
    public string Desc { get; private set; }
    /// <summary>
    /// 节点参数
    /// </summary>
    public System.Collections.Generic.List<int> NodeParams { get; private set; }

    public const int __ID__ = -294143606;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "AIConfigId:" + AIConfigId + ","
        + "Order:" + Order + ","
        + "Name:" + Name + ","
        + "Desc:" + Desc + ","
        + "NodeParams:" + Bright.Common.StringUtil.CollectionToString(NodeParams) + ","
        + "}";
    }

    partial void PostInit();
    partial void PostResolve();
}
}
